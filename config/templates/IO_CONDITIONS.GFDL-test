############################################################################################################################################
############################################################################################################################################
####                                                                                                                                    ####
####                                                                                                                                    ####
####                                             %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%                                            ####
####                                             %%  GEOCLIM INPUT-OUTPUT INTERFACE FILE  %%                                            ####
####                                             %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%                                            ####
####                                                                                                                                    ####
####                                                                                                                                    ####
####    States the run name, the paths of the configuration files, directories, restart files, input files and output files.            ####
####    For netCDF files, states also the variable names, dimensions, units...                                                          ####
####                                                                                                                                    ####
####    All the data present here is passed to Fortran code using NAMELISTS. A Fortran namelist starts by "&..." ("..." being the       ####
####    name of the namelist) and ends by "/". Namelists contain Fortran variable affectation statements ("variable = ..."),            ####
####    using the "actual" variable names of the Fortran code.                                                                          ####
####    Example of namelist (Fortran-commented, to avoid any interference):                                                             ####
####        ! &NAMELIST_EXAMPLE                                                                                                         ####
####        !  fortran_variable_1 = 'test'                                                                                              ####
####        !  fortran_variable_2 = 1d0                                                                                                 ####
####        ! /                                                                                                                         ####
####    These namelist names, as well as the "actual" Fortran variable name  must not be modified (unless the code is modified too      ####
####    Comments inside namelists start with "!".                                                                                       ####
####    The order in which the namelists are put, as well as the order of the variables written within the namelist has no importance.  ####
####    Any line of this file outside namelists are ignored by the code.                                                                ####
####                                                                                                                                    ####
####                                                                                                                                    ####
####    All given file paths are considered relative to the GEOCLIM MAIN DIRECTORY (and NOT any subdirectory, such as executables/),    ####
####    REGARDLESS of the directory the executable will be launched in. This unless the file path starts with '/', in that case,        ####
####    it is interpreted as an absolute path.                                                                                          ####
####    The GEOCLIM main directory is stated in source/path.inc, automatically generated at compilation with Makefile (or with          ####
####    build_GEOCLIM).                                                                                                                 ####
####                                                                                                                                    ####
####    The present file is the only one whose name is stated within the code of GEOCLIM (first line of geoclim_mainprog.f), and        ####
####    cannot be changed (unless changing the source code). All other files names are defined here.                                    ####
####                                                                                                                                    ####
####                                                                                                                                    ####
############################################################################################################################################
############################################################################################################################################




############################################################################################################################################
##                                                                                                                                        ##
##                                                           MAIN IO CONDITIONS:                                                          ##
##                                                                                                                                        ##
############################################################################################################################################


#<------->
&MAIN_INFO
 run_name         = '.testrun_GFDL'
 output_directory = 'OUTPUT/'
 phys_cond_file   = 'config/templates/cond_p20.GFDL-test.dat' ! unit 3
 ! #                 |=> contains most of the run configuration, such as solver time steps, printing time steps,
 ! #                     model components to use, and volcanic degassing rate
 killing_file     = 'deathnote.txt' ! unit 666
/
#<------->




############################################################################################################################################
##                                                                                                                                        ##
##                                                  INITIALIZATION FILES (ie, restarts):                                                  ##
##                                                                                                                                        ##
############################################################################################################################################


##  COMBINE module (ascii text files)
##  =================================

#<------->
&INIT_INFO
 geoc_var_init_file = 'restart/geoclim/output.GFDL_PI_eq' ! unit 2
/
#<------->


##  DynSoil module (restarting mode, netCDF file and variables)
##  ===========================================================
#
# => ignored if DynSoil is not activated

#<---------->
&DYNSOIL_INIT_INFO

 ! # DynSoil initialization mode
 init_mode = 'startup:eq'
 ! #       - 'restart'      => read restart from existing file
 ! #       - 'startup:null' => create null initial condition (reg. thick. = 0 everywhere)
 ! #       - 'startup:eq'   => create initial conditions at equilibrium with given climatology and init pCO2 (using analytical formulas)

 ! # Initialization file path (only used in 'restart' initialization mode):
 init_file = 'none'

 ! # Dimension names in initial condition file
 DYNS_restart_dim(1) = 'lon'
 DYNS_restart_dim(2) = 'lat'
 DYNS_restart_dim(3) = 'litho'
 DYNS_restart_dim(4) = 'xlevs'
 ! # Variable names in initial condition file
 DYNS_restart_var(1) = 'reg_thickness'
 DYNS_restart_var(2) = 'x_P_surf'
 DYNS_restart_var(3) = 'age_surf'
 DYNS_restart_var(4) = 'z'
 DYNS_restart_var(5) = 'age'
 ! # Note: this block is used both for restarting from a initial condition file (init_mode='restart') AND writing the next restart file

/
#<---------->




############################################################################################################################################
##                                                                                                                                        ##
##                                                               INPUT FILES:                                                             ##
##                                                                                                                                        ##
############################################################################################################################################


## ========================= ##
##  MAIN CONTINENTAL INPUTS  ##
## ========================= ##

# "cont_input_mode" tells GEOCLIM how to read the continental input
# 2 options:
#   * cont_input_mode='ascii' => read inputs from ascii files ("old" way)
#                                 -> the code will read the file "GCM_input_condition_file"
#   * cont_input_mode='GCM'   => read inputs from GCM netCDF outputs (land module annual climatology)
#                                 -> the code will read the files ascii data files
#                                     - "grid_area_file"
#                                     - "cont_area_file"
#                                     - "temperature_file"
#                                     - "runoff_file"
#                                     - "interp_T_factor"
#                                     - "interp_R_factor"

#<-------------->
&CONT_INFO

 cont_input_mode = 'GCM' ! must be 'ascii' or 'GCM'

 ! # Only considered in input mode "ascii"
 grid_area_file   = 'none' ! unit 301
 cont_area_file   = 'none' ! unit 7
 temperature_file = 'none' ! unit 30
 runoff_file      = 'none' ! unit 31
 interp_T_factor  = 'none' ! unit 302 -- NOTE: file *not read* in current version
 interp_R_factor  = 'none' ! unit 303 -- NOTE: file *not read* in current version

 ! # Only considered in input mode "GCM"
 GCM_input_condition_file = 'config/templates/GCM_input_conditions.GFDL' ! unit 333

/
#<-------------->


## =========== ##
##  LITHOLOGY  ##
## =========== ##

# Specify file, lithology fraction variable and fillvalue names of the netCDF input file
#
# Alternatively, you can specify directly the lithology fraction of each class (a geographically-uniform
# lithology will be assumed):
#     singlepixel_lithofrac = ...
# (must be consistent with nlitho variable!)
# To do so, LEAVE BLANK (or COMMENT) the lithology input file name "file_name"
#
# NOTE: the traditional 6 lithology classes version of GEOCLIM is:
# ----
#  1: metamorphic; 2: felsic; 3: intermediate; 4: mafic; 5: siliclastic sediments; 6: carbonates

#<-------->
&LITHO_INFO

 file_name    = 'INPUT/lithology/lithology_fraction_PI_6class_30minx30min.nc'
 var_name     = 'lithfrac'
 fillval_name = '_FillValue'

 ! # if file_name is blank ("") or undefined (commented) => use uniform lithology:
 singlepixel_lithofrac = 0.144, 0.074, 0.023, 0.053, 0.616, 0.090 
 !                       --> derived from Hartmann & Moodsorf, G3, 2012 (10.1029/2012GC004370)

/
#<-------->


## ======= ##
##  SLOPE  ##
## ======= ##

# Continental output that is only used by DynSoil module
# => ignored if DynSoil is not activated

#<-------->
&SLOPE_INFO
 file_name    = 'INPUT/slope/slope_PD_SRTM_30min.nc'
 var_name     = 'slope'
 fillval_name = '_FillValue'
/
#<-------->


## ========================== ##
##  OTHER CONTINENTAL INPUTS  ##
## ========================== ##

#   * vegetation map (through time). [Ignored if vegetation flag not activated]
#<-------->
&VEGET_INFO
 file_name = 'none' ! unit 48
/
#<-------->

#   * Climatic parameters (through time). [ignored if no additional climatic parameters (ie, other than CO2)]
#<------------>
&CLIMPARAM_INFO
 file_name = 'none' ! unit 49
/
#<------------>


## ============================== ##
##  OCEANIC (ie, COMBINE) INPUTS  ##
## ============================== ##

#<---------->
&COMBINE_INFO

 ! ##  Main inputs
 ocean_temp_mode    = 'parametric' ! if 'parametric', use parametric CO2-Toce relationship, and ignore input file
 !ocean_temp_file   = '' ! unit 32

 ! ##  Earth physical dimensions
 box_volume_file    = 'INPUT/COMBINE/ref/oce_vol.dat' ! unit 33
 box_surf_file      = 'INPUT/COMBINE/ref/oce_surf.dat' ! unit 34
 box_surf_sedi_file = 'INPUT/COMBINE/ref/surf_sedi.dat' ! unit 37

 ! ##  definition of boxes (files containing 0|1 indices)
 deep_box_file      = 'INPUT/COMBINE/ref/indice_deep.dat' ! unit 35
 sedim_box_file     = 'INPUT/COMBINE/ref/indice_sedi.dat' ! unit 36
 appcont_box_file   = 'INPUT/COMBINE/ref/apport_ct.dat' ! unit 39
 thermocline_file   = 'INPUT/COMBINE/ref/thermocline.dat' ! unit 40
 surface_box_file   = 'INPUT/COMBINE/ref/indice_surface.dat' ! unit 41
 epicont_box_file   = 'INPUT/COMBINE/ref/indice_epicont.dat' ! unit 46
 polar_box_file     = 'INPUT/COMBINE/ref/indice_polar.dat' ! unit 47

 ! ##  other physical parameters
 box_press_file     = 'INPUT/COMBINE/ref/press_box.dat' ! unit 38
 exchange_file      = 'INPUT/COMBINE/ref/exchange_2.dat' ! unit 42
 fsink_inorg_file   = 'INPUT/COMBINE/ref/fsink_inorg.dat' ! unit 44
 fsink_file         = 'INPUT/COMBINE/ref/fsink.dat' ! unit 45

/
#<---------->




############################################################################################################################################
##                                                                                                                                        ##
##                                                           OUTPUT CONDITIONS:                                                           ##
##                                                                                                                                        ##
############################################################################################################################################


# Select here the variables you want to output, and customize variable names, units and descriptions
# --------------------------------------------------------------------------------------------------
#
# The "output file" namelists (&*_OUTPUT_FILE) only include the variable "file_name"
#
# The "dimension variables" namelists (&*_OUTPUT_DIM) include the arrays "dname(:)", "units(:)" (both mandatory) and vartype(:) (by default: "real")
#
# The "main netCDF variables" namelists (&*_OUTPUT_VAR) include the following arrays:
#    Mandatory variables:
#        "vname(:)", "units(:)" and "defdim(:,:)". (mandatory unless the netCDF variable is not written => see "writevar").
#        "vname(:)" and "units(:)" can be customized by user. "defdim" should not be modified, unless re-writing GEOCLIM code.
#    Optional variables:
#        * "long_name(:)" -> description of the netCDF variable
#        * "writevar(:)"  -> TRUE or FALSE, control whether or not the GEOCLIM variable is written in the output netCDF file (default: TRUE)
#                            if specified "writevar=FALSE", no other variable is needed in the namelist
#        * "fillval(:)"   -> fill-value of the netCDF variable. It is a "real" Fortran variable type, but will be converted into the netCDF type
#        * "vartype(:)"   -> type of the netCDF variable. By default, "real", This should not be modified, unless re-writing GEOCLIM code.
#
# In all array, the index (e.g., vname(87)) correspond to the # of the dimension or variable in the code.


## ================== ##
##  COMBINE OUTPUTS:  ##
## ================== ##

#<------------->
&CMB_OUTPUT_FILE
  file_name='geoclim_output'
/
-------------
&CMB_OUTPUT_DIM
  dname(1)='box',	units(1)='1', vartype(1)='integer'
  dname(2)='time',	units(2)='y'
/
---------------
&CMB_OUTPUT_VAR
 vname(1)='box_volume',			units(1)='m3',			defdim(1,:)=1,0
 vname(2)='box_surface',		units(2)='m2',			defdim(2,:)=1,0
 vname(3)='box_sedim_surface',		units(3)='m2',			defdim(3,:)=1,0
 vname(4)='DIC',			units(4)='mol/m3',		defdim(4,:)=1,1		long_name(4)='Dissolved Organic Carbon concentration'
 vname(5)='alkalinity',			units(5)='eq/m3',		defdim(5,:)=1,1		long_name(5)='Seawater alkalinity'
 vname(6)='PO4',			units(6)='mol/m3',		defdim(6,:)=1,1		long_name(6)='Phosphate ion concentration'
 vname(7)='Ca',				units(7)='mol/m3',		defdim(7,:)=1,1		long_name(7)='Calcium ion concentration'
 vname(8)='Sr',				units(8)='mol/m3',		defdim(8,:)=1,1		long_name(8)='Strontium ion concentration'
 vname(9)='Sr_PIC',			units(9)='mol/m3',		defdim(9,:)=1,1		long_name(9)='Sr in Particulate Inorganic Carbon (moles of Sr / m3 of water)'
 vname(10)='POP',			units(10)='mol/m3',		defdim(10,:)=1,1	long_name(10)='Particulate Organic Phosphorus (moles of P / m3 of water)'
 vname(11)='PIP',			units(11)='mol/m3',		defdim(11,:)=1,1	long_name(11)='Particulate Inorganic Phosphorus (moles of P / m3 of water)'
 vname(12)='POC',			units(12)='mol/m3',		defdim(12,:)=1,1	long_name(12)='Particulate Organic Carbon (moles of C / m3 of water)'
 vname(13)='PIC',			units(13)='mol/m3',		defdim(13,:)=1,1	long_name(13)='Particulate Inorganic Carbon (moles of C / m3 of water)'
 vname(14)='O2',			units(14)='mol/m3',		defdim(14,:)=1,1	long_name(14)='Dioxygen concentration'
 vname(15)='PCO2',			units(15)='mol',		defdim(15,:)=1,1	long_name(15)='Partial pressure of CO2 (equiv. in moles)'
 vname(16)='DIC_d13C',			units(16)='-',			defdim(16,:)=1,1	long_name(16)='delta C 13 of Dissolved Inorganic Carbon'
 vname(17)='PIC_d13C',			units(17)='-',			defdim(17,:)=1,1	long_name(17)='delta C 13 of Particulate Inorganic Carbon'
 vname(18)='POC_d13C',			units(18)='-',			defdim(18,:)=1,1	long_name(18)='delta C 13 of Particulate Organic Carbon'
 vname(19)='CO2_d13C',			units(19)='-',			defdim(19,:)=1,1	long_name(19)='delta C 13 of CO2'
 vname(20)='Sr_iso_ratio',		units(20)='-',			defdim(20,:)=1,1	long_name(20)='Sr 87 / Sr 86 isotopic ratio'
 vname(21)='PIC_Sr_iso_ratio',		units(21)='-',			defdim(21,:)=1,1	long_name(21)='Sr 87 / Sr 86 ratio in Particulate Inorganic Carbon'
 writevar(22)=FALSE ! Archaism: former unattributed GEOCLIM variable 19 
 vname(23)='SO4',			units(23)='mol/m3',		defdim(23,:)=1,1	long_name(23)='Sulfate ion concentration'
 vname(24)='H2CO3',			units(24)='mol/m3',		defdim(24,:)=1,1	long_name(24)='H2CO3 ion concentration'
 vname(25)='HCO3',			units(25)='mol/m3',		defdim(25,:)=1,1	long_name(25)='HCO3 - ion concentration'
 vname(26)='CO3',			units(26)='mol/m3',		defdim(26,:)=1,1	long_name(26)='CO3 2- ion concentration'
 vname(27)='H2CO3_d13C',		units(27)='-',			defdim(27,:)=1,1	long_name(27)='delta C 13 of H2CO3'
 vname(28)='HCO3_d13C',			units(28)='-',			defdim(28,:)=1,1	long_name(28)='delta C 13 of HCO3 -'
 vname(29)='CO3_d13C',			units(29)='-',			defdim(29,:)=1,1	long_name(29)='delta C 13 of CO3 2-'
 vname(30)='pH',			units(30)='-',			defdim(30,:)=1,1	long_name(30)='potential of hydrogen'
 vname(31)='omega',			units(31)='-',			defdim(31,:)=1,1	long_name(31)='Calcite solubility product'
 vname(32)='temperature',		units(32)='degrees_celsius',	defdim(32,:)=1,1	long_name(32)='Seawater temperature'
 vname(33)='salinity',			units(33)='PSU',		defdim(33,:)=1,1	long_name(33)='Seawater salinity'
 vname(34)='lysoc_depth_carb',		units(34)='km',			defdim(34,:)=1,1	long_name(34)='Calcite lysocline depth'
 vname(35)='lysoc_depth_arag',		units(35)='km',			defdim(35,:)=1,1	long_name(35)='Aragonite lysocline depth'
 vname(36)='DIC_glob',			units(36)='mol/m3',		defdim(36,:)=0,1	long_name(36)='Mean ocean Dissolved Organic Carbon concentration'
 vname(37)='alk_glob',			units(37)='eq/m3',		defdim(37,:)=0,1	long_name(37)='Mean ocean alkalinity'
 vname(38)='PO4_glob',			units(38)='mol/m3',		defdim(38,:)=0,1	long_name(38)='Mean ocean Phosphate ion concentration'
 vname(39)='Ca_glob',			units(39)='mol/m3',		defdim(39,:)=0,1	long_name(39)='Mean ocean Calcium ion concentration'
 vname(40)='Sr_glob',			units(40)='mol/m3',		defdim(40,:)=0,1	long_name(40)='Mean ocean Strontium ion concentration'
 vname(41)='Sr_PIC_glob',		units(41)='mol/m3',		defdim(41,:)=0,1	long_name(41)='Mean ocean Sr in Particulate Inorganic Carbon (moles of Sr)'
 vname(42)='POP_glob',			units(42)='mol/m3',		defdim(42,:)=0,1	long_name(42)='Mean ocean Particulate Organic Phosphorus (moles of P)'
 vname(43)='PIP_glob',			units(43)='mol/m3',		defdim(43,:)=0,1	long_name(43)='Mean ocean Particulate Inorganic Phosphorus (moles of P)'
 vname(44)='POC_glob',			units(44)='mol/m3',		defdim(44,:)=0,1	long_name(44)='Mean ocean Particulate Organic Carbon (moles of C)'
 vname(45)='PIC_glob',			units(45)='mol/m3',		defdim(45,:)=0,1	long_name(45)='Mean ocean Particulate Inorganic Carbon (moles of C)'
 vname(46)='O2_glob',			units(46)='mol/m3',		defdim(46,:)=0,1	long_name(46)='Mean ocean dioxygen concentration'
 vname(47)='DIC_d13C_glob',		units(47)='-',			defdim(47,:)=0,1	long_name(47)='Mean ocean delta C 13 of Dissolved Inorganic Carbon'
 vname(48)='PIC_d13C_glob',		units(48)='-',			defdim(48,:)=0,1	long_name(48)='Mean ocean delta C 13 of Particulate Inorganic Carbon'
 vname(49)='POC_d13C_glob',		units(49)='-',			defdim(49,:)=0,1	long_name(49)='Mean ocean delta C 13 of Particulate Organic Carbon'
 vname(50)='Sr_iso_rat_glob',		units(50)='-',			defdim(50,:)=0,1	long_name(50)='Mean ocean Sr 87 / Sr 86 isotopic ratio'
 vname(51)='PIC_Sr_iso_rat_glob',	units(51)='-',			defdim(51,:)=0,1	long_name(51)='Mean ocean Sr 87 / Sr 86 ratio in Particulate Inorganic Carbon'
 writevar(52)=FALSE ! Archaism: former unattributed GEOCLIM variable 19 
 vname(53)='SO4_glob',			units(53)='mol/m3',		defdim(53,:)=0,1	long_name(53)='Mean ocean sulfate concentration'
 vname(54)='pH_glob',			units(54)='-',			defdim(54,:)=0,1	long_name(54)='Mean ocean potential of hydrogen'
! # note: 'omega_glob' NO LONGER WRITTEN
 vname(55)='temperature_glob',		units(55)='degrees_celsius',	defdim(55,:)=0,1	long_name(55)='Mean ocean temperature'
 vname(56)='salinity_glob',		units(56)='PSU',		defdim(56,:)=0,1	long_name(56)='Mean ocean salinity'
 vname(57)='O2_atm_level',		units(57)='PAL',		defdim(57,:)=0,1	long_name(57)='Atmospheric O2 amount relative to Pre-Indutrial'
 vname(58)='CO2_atm_level',		units(58)='PAL',		defdim(58,:)=0,1	long_name(58)='Atmospheric CO2 amount relative to Pre-Industrial'
 vname(59)='O2_atm_conc',		units(59)='%',			defdim(59,:)=0,1	long_name(59)='Atmospheric O2 mixing ratio'
 vname(60)='CO2_atm_conc',		units(60)='ppm',		defdim(60,:)=0,1	long_name(60)='Atmospheric CO2 mixing ratio'
 writevar(61)=FALSE, vname(61)='xPOPexport', units(61)='mol/y',		defdim(61,:)=0,1
 vname(62)='fCO2anthros',		units(62)='mol/y',		defdim(62,:)=0,1	long_name(62)='Anthropogenic CO2 flux'
 vname(63)='AO_CO2_flux',		units(63)='mol/y',		defdim(63,:)=1,1	long_name(63)='Net CO2 flux from atmosphere to ocean basin'
 vname(64)='AO_tot_CO2_flux',		units(64)='mol/y',		defdim(64,:)=0,1	long_name(64)='Total net CO2 flux from atmosphere to ocean'
 vname(65)='carb_prod_C_flux',		units(65)='mol/y',		defdim(65,:)=1,1	long_name(65)='Oceanic carbonate production flux'
 vname(66)='carb_diss_C_flux',		units(66)='mol/y',		defdim(66,:)=0,1	long_name(66)='Oceanic carbonate dissolution flux'
 vname(67)='sil_wth_C_flux',		units(67)='mol/y',		defdim(67,:)=0,1	long_name(67)='Silicate weathering flux from continents (moles of Ca-Mg)'
 vname(68)='bas_wth_C_flux',		units(68)='mol/y',		defdim(68,:)=0,1	long_name(68)='Basalts weathering flux from continents (moles of Ca-Mg)'
 vname(69)='carb_wth_C_flux',		units(69)='mol/y',		defdim(69,:)=0,1	long_name(69)='Carbonate weathering flux from continents (moles of Ca-Mg)'
 vname(70)='ker_wth_C_flux',		units(70)='mol/y',		defdim(70,:)=0,1	long_name(70)='Land petrogenic carbon oxidation flux'
 vname(71)='carb_ner_dep_flux',		units(71)='mol/y',		defdim(71,:)=1,1	long_name(71)='Neritic carbonate deposition flux'
 vname(72)='carb_ner_tot_dep_flux',	units(72)='mol/y',		defdim(72,:)=0,1	long_name(72)='Total neritic carbonate deposition flux'
 vname(73)='carb_pel_tot_dep_flux',	units(73)='mol/y',		defdim(73,:)=0,1	long_name(73)='Total Pelagic carbonate deposition flux'
 vname(74)='org_C_dep_flux',		units(74)='mol/y',		defdim(74,:)=1,1	long_name(74)='Organic carbon burial flux'
 vname(75)='org_C_tot_dep_flux',	units(75)='mol/y',		defdim(75,:)=0,1	long_name(75)='Total organic carbon burial flux'
 vname(76)='PIC_sink_flux',		units(76)='mol/y',		defdim(76,:)=1,1	long_name(76)='Sinking flux of carbonate particles'
 vname(77)='P_wth_flux',		units(77)='mol/y',		defdim(77,:)=0,1	long_name(77)='Phosphorus weathering from continents'
 vname(78)='org_C_bio_prod',		units(78)='mol/y',		defdim(78,:)=1,1	long_name(78)='Oceanic bioproductivity (moles of C)'
 vname(79)='seafloor_C_diss_flux',	units(79)='mol/y',		defdim(79,:)=1,1	long_name(79)='Seafloor weathering flux (moles of C)'
 vname(80)='seafloor_C_tot_diss_flux',	units(80)='mol/y',		defdim(80,:)=0,1	long_name(80)='Total seafloor weathering flux (moles of C)'
 vname(81)='trapp_C_rel_flux',		units(81)='mol/y',		defdim(81,:)=0,1	long_name(81)='CO2 flux from trapp degassing'
 writevar(82)=FALSE, vname(82)='fCO2crust', units(82)='-',		defdim(82,:)=1,1
 writevar(83)=FALSE, vname(83)='fSO4_basin', units(83)='-',		defdim(83,:)=1,1
 writevar(84)=FALSE, vname(84)='fSO4_crust', units(84)='-',		defdim(84,:)=1,1
 writevar(85)=FALSE, vname(85)='Li_Friv', units(85)='mol/y',		defdim(85,:)=0,1	long_name(85)='Lithium flux from continental silicate weathering'
 writevar(86)=FALSE, vname(86)='Li_driv', units(86)='-',		defdim(86,:)=0,1	long_name(86)='delta Li 7 of Lithium from silicate weathering'
 vname(87)='total_cont_POC_export',	units(87)='mol/y',		defdim(87,:)=0,1
 vname(88)='tot_CO2_degassing',		units(88)='mol/y',		defdim(88,:)=0,1	long_name(88)='Total CO2 degassing flux into ocean-atmosphere'
 vname(89)='discharge',			units(89)='m3/y',		defdim(89,:)=0,1	long_name(89)='Freshwater discharge from continents'
 vname(90)='TSS',			units(90)='kg/y',		defdim(90,:)=0,1	long_name(90)='Sediment discharge from continents'
 vname(91)='ocn_epsilon_OC',		units(91)='-',			defdim(91,:)=1,1	long_name(91)='C 13 fractionation coefficient during oceanic org. C production'
 writevar(92)=FALSE, vname(92)='cont_org_C_d13C', units(92)='-',	defdim(92,:)=0,1	long_name(92)='delta 13 C of continental organic carbon'
 vname(93)='GMST',			units(93)='degrees_celsius',	defdim(93,:)=0,1	long_name(93)='Global Mean Surface Temperature'
 vname(94)='sedim_rate',		units(94)='m/y',		defdim(94,:)=1,1	long_name(94)='sedimentation rate'
 vname(95)='sedim_flux',		units(95)='kg/y',		defdim(95,:)=1,1	long_name(95)='sedimentation massic flux'
 vname(96)='burial_efficiency',		units(96)='-',			defdim(96,:)=1,1	long_name(96)='Organic Carbon burial efficiency'
 vname(97)='P_dep_flux_orgC',		units(97)='mol/y',		defdim(97,:)=1,1	long_name(97)='Organic carbon-bound phosphorus deposition flux'
 vname(98)='P_dep_flux_phosph',		units(98)='mol/y',		defdim(98,:)=1,1	long_name(98)='Phosphorus deposition flux in form of phosphorite'
 vname(99)='P_dep_flux_hydro',		units(99)='mol/y',		defdim(99,:)=1,1	long_name(99)='Hydrothermal Fe-bound phosphorus deposition flux'
 vname(100)='pyrite_wth_S_flux',	units(100)='mol/y',		defdim(100,:)=0,1	long_name(100)='Sulfur flux from continental pyrite oxidation'
 vname(101)='sil_sulfwth_Ca_flux',	units(101)='mol/y',		defdim(101,:)=0,1	long_name(101)='Silicate weathering flux by sulfuric acid (moles of Ca-Mg)'
 vname(102)='carb_sulfwth_Ca_flux',	units(102)='mol/y',		defdim(102,:)=0,1	long_name(102)='Carbonate weathering flux by sulfuric acid (moles of Ca-Mg)'
 vname(103)='sulf_red_flux',		units(103)='mol/y',		defdim(103,:)=1,1	long_name(103)='Sulfate-reduction flux in marine sediment (moles of S)'
 vname(104)='sulf_red_tot_flux',	units(104)='mol/y',		defdim(104,:)=0,1	long_name(104)='Total sulfate-reduction flux in marine sediment (moles of S)'
 vname(105)='orgC_dep_O2_flux',		units(105)='mol/y',		defdim(105,:)=1,1	long_name(105)='O2 flux due to organic carbon burial'
 vname(106)='orgC_dep_O2_tot_flux',	units(106)='mol/y',		defdim(106,:)=0,1	long_name(106)='Total O2 flux due to organic carbon burial'
 writevar(107)=FALSE, vname(107)='clim_param_1', units(107)='-',	defdim(107,:)=0,1	long_name(107)='climatic parameter #1'
 writevar(108)=FALSE, vname(108)='clim_param_2', units(108)='-',	defdim(108,:)=0,1	long_name(108)='climatic parameter #2'
 writevar(109)=FALSE, vname(109)='clim_param_3', units(109)='-',	defdim(109,:)=0,1	long_name(109)='climatic parameter #3'
 writevar(110)=FALSE, vname(110)='clim_param_4', units(110)='-',	defdim(110,:)=0,1	long_name(110)='climatic parameter #4'
 writevar(111)=FALSE, vname(111)='clim_param_5', units(111)='-',	defdim(111,:)=0,1	long_name(111)='climatic parameter #5'
/
#<------------->


## ===================== ##
##  GEOGRAPHIC OUTPUTS:  ##
## ===================== ##

#<------------->
&GEO_OUTPUT_FILE
 file_name='geographic_output'
/
-------------
&GEO_OUTPUT_DIM
 dname(1)='lon',	units(1)='degrees_east'
 dname(2)='lat',	units(2)='degrees_north'
 dname(3)='litho',	units(3)='-', vartype(3)='integer'
 dname(4)='time',	units(4)='y'
/
---------------
&GEO_OUTPUT_VAR
 vname(1)='area',			units(1)='m2',			defdim(1,:)=1,1,0,0,	long_name(1)='land area of grid cells'
 vname(2)='litho_frac',			units(2)='-',			defdim(2,:)=1,1,1,0,	long_name(2)='fraction of land covered by each lithology class'
 writevar(3)=FALSE, vname(3)='clim_param_1',	units(3)='-',		defdim(3,:)=0,0,0,1,	long_name(3)='climatic parameter #1'
 writevar(4)=FALSE, vname(4)='clim_param_2',	units(4)='-',		defdim(4,:)=0,0,0,1,	long_name(4)='climatic parameter #2'
 writevar(5)=FALSE, vname(5)='clim_param_3',	units(5)='-',		defdim(5,:)=0,0,0,1,	long_name(5)='climatic parameter #3'
 writevar(6)=FALSE, vname(6)='clim_param_4',	units(6)='-',		defdim(6,:)=0,0,0,1,	long_name(6)='climatic parameter #4'
 writevar(7)=FALSE, vname(7)='clim_param_5',	units(7)='-',		defdim(7,:)=0,0,0,1,	long_name(7)='climatic parameter #5'
 vname(8)='temperature',		units(8)='degrees_celsius',	defdim(8,:)=1,1,0,1,	long_name(8)='Surface temperature'
 vname(9)='runoff',			units(9)='cm/y',		defdim(9,:)=1,1,0,1,	long_name(9)='Total runoff'
 vname(10)='slope',			units(10)='m/m',		defdim(10,:)=1,1,0,0,	long_name(10)='topographic slope'
 vname(11)='sil_weathering',		units(11)='mol/m2/y',		defdim(11,:)=1,1,0,1,	long_name(11)='Total silicate Ca-Mg weathering rate'
 vname(12)='weathering_lithwgh',	units(12)='mol/m2/y',		defdim(12,:)=1,1,1,1,	long_name(12)='Ca-Mg weathering rate per lithology (fraction-weighted)'
 writevar(13)=FALSE, vname(13)='weathering_unwgh', units(13)='mol/m2/y',defdim(13,:)=1,1,1,1,	long_name(13)='Ca-Mg weathering rate per lithology (unweighted)'
 vname(14)='kerog_weathering',		units(14)='mol/m2/y',		defdim(14,:)=1,1,0,1,	long_name(14)='Kerogen weathering rate (moles of C)'
 vname(15)='biosph_org_C_export',	units(15)='mol/m2/y',		defdim(15,:)=1,1,0,1,	long_name(15)='Rate of biospheric organic carbon export to the oceans'
 vname(16)='phos_weathering',		units(16)='mol/m2/y',		defdim(16,:)=1,1,0,1,	long_name(16)='Phosphorus weathering rate'
/
#<------------->


## ================== ##
##  DYNSOIL OUTPUTS:  ##
## ================== ##
#
# => ignored if no coupled to DynSoil module

#<------------->
&DYN_OUTPUT_FILE
 file_name='dynsoil_output'
/
-------------
&DYN_OUTPUT_DIM
 dname(1)='lon',	units(1)='degrees_east'
 dname(2)='lat',	units(2)='degrees_north'
 dname(3)='litho',	units(3)='-',  vartype(3)='integer'
 dname(4)='xlevs',	units(4)='-'
 dname(5)='time',	units(5)='y'
/
---------------
&DYN_OUTPUT_VAR
 vname(1)='area',			units(1)='m2',			defdim(1,:)=1,1,0,0,0,	long_name(1)='land area of grid cells'
 vname(2)='litho_frac',			units(2)='-',			defdim(2,:)=1,1,1,0,0,	long_name(2)='fraction of land covered by each lithology class'
 vname(3)='slope',			units(3)='m/m',			defdim(3,:)=1,1,0,0,0,	long_name(3)='topographic slope'
 writevar(4)=FALSE, vname(4)='temperature',units(4)='degrees_celsius',	defdim(4,:)=1,1,0,0,1,	long_name(4)='Surface temperature'
 writevar(5)=FALSE, vname(5)='runoff',	units(5)='cm/y',		defdim(5,:)=1,1,0,0,1, 	long_name(5)='Total runoff'
 vname(6)='reg_thickness',		units(6)='m',			defdim(6,:)=1,1,1,0,1,	long_name(6)='Regolith thickness'
 vname(7)='x_P_surf',			units(7)='-',			defdim(7,:)=1,1,1,0,1,	long_name(7)='Fraction of primary phases at top of regolith'
 writevar(8)=FALSE, vname(8)='age_surf',units(8)='y',			defdim(8,:)=1,1,1,0,1,	long_name(8)='Age of particles at top of regolith'
 writevar(9)=FALSE, vname(9)='z',	units(9)='m',			defdim(9,:)=1,1,1,1,1,	long_name(9)='Height (from base of regolith) of x levels'
 writevar(10)=FALSE, vname(10)='age',	units(10)='y',			defdim(10,:)=1,1,1,1,1,	long_name(10)='Age of particles on x levels'
 vname(11)='reg_prod_rate',		units(11)='m/y',		defdim(11,:)=1,1,1,0,1,	long_name(11)='Regolith production rate'
 vname(12)='reg_eros_rate',		units(12)='m/y',		defdim(12,:)=1,1,1,0,1,	long_name(12)='Regolith erosion rate'
 vname(13)='reg_P_diss_rate',		units(13)='m/y',		defdim(13,:)=1,1,1,0,1,	long_name(13)='Volumetric dissolution rate of primary phases'
 writevar(14)=FALSE, vname(14)='reg_P_eros_rate', units(14)='m/y',	defdim(14,:)=1,1,1,0,1,	long_name(14)='Volumetric erosion rate of unweathered primary phases'
 writevar(15)=FALSE, vname(15)='x_P_surf_eros', units(15)='-',		defdim(15,:)=1,1,1,0,1,	long_name(15)='Erosive fraction of primary phases'
 vname(16)='x_P_mean',			units(16)='-',			defdim(16,:)=1,1,1,0,1,	long_name(16)='Mean regolith fraction of primary phases'
 vname(17)='reg_mean_age',		units(17)='y',			defdim(17,:)=1,1,1,0,1,	long_name(17)='Mean regolith age'
 writevar(18)=FALSE, vname(18)='Li_friv', units(18)='mol/m2/y',		defdim(18,:)=1,1,1,0,1,	long_name(18)='Specific flux of lithium leaching into rivers'
 writevar(19)=FALSE, vname(19)='Li_fsp', units(19)='mol/m2/y',		defdim(19,:)=1,1,1,0,1,	long_name(19)='Specific flux of lithium kept in secondary phases'
 writevar(20)=FALSE, vname(20)='Li_delta_riv',	units(20)='-',		defdim(20,:)=1,1,1,0,1,	long_name(20)='delta Li 7 of leached lithium'
/
#<------------->




############################################################################################################################################
##                                                                                                                                        ##
##                                              names of restart files written by the code:                                               ##
##                                                                                                                                        ##
############################################################################################################################################
##
# <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
# Names in this section usually do not need to be modified
# <><><><><><><><><><><><><><><><><><><><><><><><><><><><>

#<---------->
&RESTART_INFO
 COMBINE_restart_file = 'output'          ! unit 10
 DynSoil_restart_file = 'dynsoil_restart'
/
#<---------->

